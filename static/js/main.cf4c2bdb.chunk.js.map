{"version":3,"sources":["components/RecipeIngredients.jsx","components/Recipe.jsx","components/Alert.jsx","App.js","reportWebVitals.js","index.js"],"names":["RecipeIngredients","ingredients","className","map","ingredient","index","key","text","weight","Recipe","recipe","useState","show","setShow","label","image","url","href","target","rel","src","alt","onClick","Alert","alert","App","query","setQuery","recipes","setRecipes","setAlert","getData","a","axios","get","data","console","log","more","hits","onSubmit","e","preventDefault","type","placeholder","autoComplete","onChange","value","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAkBeA,EAhBW,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3B,OACE,qBAAKC,UAAU,uBAAf,SACGD,EAAYE,KAAI,SAACC,EAAYC,GAC5B,IAAMC,EAAG,qBAAiBD,GAC1B,OACE,qBAAcH,UAAU,kBAAxB,UACE,oBAAIA,UAAU,kBAAd,SAAiCE,EAAWG,OAC5C,qBAAIL,UAAU,oBAAd,sBAA4CE,EAAWI,YAFhDF,SCUJG,EAfA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAAa,EACLC,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,OAEcH,EAAOA,OAA1CI,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,MAAOC,EAFO,EAEPA,IAAKf,EAFE,EAEFA,YAC3B,OACE,sBAAKC,UAAU,SAAf,UACE,mBAAGe,KAAMD,EAAKE,OAAO,SAASC,IAAI,sBAAlC,SACE,6BAAKL,MAEP,qBAAKM,IAAKL,EAAOM,IAAKP,IACtB,wBAAQQ,QAAS,kBAAMT,GAASD,IAAhC,yBACCA,GAAQ,cAAC,EAAD,CAAmBX,YAAaA,QCHhCsB,EARD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACf,OACE,qBAAKtB,UAAU,QAAf,SACE,6BAAKsB,O,MCgEIC,MA/Df,WAAgB,IAAD,EACad,mBAAS,IADtB,mBACNe,EADM,KACCC,EADD,OAEiBhB,mBAAS,IAF1B,mBAENiB,EAFM,KAEGC,EAFH,OAGalB,mBAAS,IAHtB,mBAGNa,EAHM,KAGCM,EAHD,KAOPd,EAAG,0CAAsCU,EAAtC,mBAFM,WAEN,oBADO,oCAGVK,EAAO,uCAAG,8BAAAC,EAAA,yDACTN,EADS,uBAEZI,EAAS,wBAFG,iCAKdA,EAAS,iBALK,SAMSG,IAAMC,IAAIlB,GANnB,mBAMNmB,EANM,EAMNA,KACRC,QAAQC,IAAIF,GACPA,EAAKG,KARI,wBASZR,EAAS,4BATG,2BAYdA,EAAS,IACTH,EAAS,IACTE,EAAWM,EAAKI,MAdF,4CAAH,qDAyBb,OACE,sBAAKrC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,6CACA,uBAAMA,UAAU,cAAcsC,SAZnB,SAACC,GAChBA,EAAEC,iBACFX,KAUI,UACGP,GAAS,cAAC,EAAD,CAAOA,MAAOA,IACxB,uBACEmB,KAAK,OACLC,YAAY,gBACZC,aAAa,MACbC,SAbO,SAACL,GAChBd,EAASc,EAAEvB,OAAO6B,QAaVA,MAAOrB,IAET,uBAAOiB,KAAK,SAASI,MAAM,iBAG/B,+BACE,qBAAK7C,UAAU,UAAf,SACG0B,EAAQoB,QACPpB,EAAQzB,KAAI,SAACO,EAAQL,GACnB,IAAMC,EAAG,iBAAaD,GACtB,OAAO,cAAC,EAAD,CAAkBK,OAAQA,GAAbJ,cCjDnB2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cf4c2bdb.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst RecipeIngredients = ({ ingredients }) => {\r\n  return (\r\n    <div className=\"ingredient-list-warp\">\r\n      {ingredients.map((ingredient, index) => {\r\n        const key = `ingredient-${index}`;\r\n        return (\r\n          <ul key={key} className=\"ingredient-list\">\r\n            <li className=\"ingredient-text\">{ingredient.text}</li>\r\n            <li className=\"ingredient-weight\">Weight - {ingredient.weight}</li>\r\n          </ul>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RecipeIngredients;\r\n","import React, { useState } from \"react\";\r\nimport RecipeIngredients from \"./RecipeIngredients\";\r\n\r\nconst Recipe = ({ recipe }) => {\r\n  const [show, setShow] = useState(false);\r\n  const { label, image, url, ingredients } = recipe.recipe;\r\n  return (\r\n    <div className=\"recipe\">\r\n      <a href={url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n        <h2>{label}</h2>\r\n      </a>\r\n      <img src={image} alt={label} />\r\n      <button onClick={() => setShow(!show)}>Ingredients</button>\r\n      {show && <RecipeIngredients ingredients={ingredients} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Recipe;\r\n","import React from \"react\";\r\n\r\nconst Alert = ({ alert }) => {\r\n  return (\r\n    <div className=\"alert\">\r\n      <h3>{alert}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport Recipe from \"./components/Recipe\";\nimport Alert from \"./components/Alert\";\nimport \"./App.css\";\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [recipes, setRecipes] = useState([]);\n  const [alert, setAlert] = useState(\"\");\n\n  const APP_ID = \"c2608c58\";\n  const APP_KEY = \"7e30a586596f99d693801375451f98df\";\n  const url = `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`;\n\n  const getData = async () => {\n    if (!query) {\n      setAlert(\"Please fill the form\");\n      return;\n    }\n    setAlert(\"Searching... \");\n    const { data } = await axios.get(url);\n    console.log(data);\n    if (!data.more) {\n      setAlert(\"Sorry , No recipe found \");\n      return;\n    }\n    setAlert(\"\");\n    setQuery(\"\");\n    setRecipes(data.hits);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    getData();\n  };\n\n  const onChange = (e) => {\n    setQuery(e.target.value);\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Food Recipe</h1>\n        <form className=\"search-form\" onSubmit={onSubmit}>\n          {alert && <Alert alert={alert} />}\n          <input\n            type=\"text\"\n            placeholder=\"Search Recipe\"\n            autoComplete=\"off\"\n            onChange={onChange}\n            value={query}\n          />\n          <input type=\"submit\" value=\"Search\" />\n        </form>\n      </header>\n      <main>\n        <div className=\"recipes\">\n          {recipes.length &&\n            recipes.map((recipe, index) => {\n              const key = `recipe-${index}`;\n              return <Recipe key={key} recipe={recipe} />;\n            })}\n        </div>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}